
:root{
  /* palette */
  --bg: #ffffff;
  --bg-soft: #f7f7f8;
  --text: #111827;
  --muted: #6b7280;
  --card: #ffffff;
  --border: #e5e7eb;

  --primary: #2563eb;            
  --primary-contrast: #ffffff;
  --accent: #10b981;             
  --danger: #ef4444;             
  --warning: #f59e0b;            

  /* layout */
  --radius: 12px;
  --radius-sm: 8px;
  --shadow: 0 8px 24px rgba(0,0,0,.08);
  --shadow-sm: 0 4px 12px rgba(0,0,0,.06);

  /* spacing scale */
  --s-1: .25rem;
  --s-2: .5rem;
  --s-3: .75rem;
  --s-4: 1rem;
  --s-5: 1.25rem;
  --s-6: 1.5rem;
  --s-8: 2rem;

  /* type */
  --font: system-ui, -apple-system, Segoe UI, Roboto, Inter, Arial, sans-serif;
  --fs-sm: .9rem;
  --fs: 1rem;
  --fs-lg: 1.25rem;
  --fs-xl: 1.5rem;
}

/* Support both body.dark and [data-theme="dark"] */
body.dark, :root[data-theme="dark"]{
  --bg: #0b1220;
  --bg-soft: #0f172a;
  --text: #e5e7eb;
  --muted: #9ca3af;
  --card: #0f172a;
  --border: #1f2937;
  --primary: #60a5fa;
  --primary-contrast: #0b1220;
  --accent: #34d399;
  --danger: #f87171;
  --warning: #fbbf24;
  --shadow: 0 10px 30px rgba(0,0,0,.35);
  --shadow-sm: 0 6px 18px rgba(0,0,0,.25);
}


* { box-sizing: border-box; }
html, body, #root { height: 100%; }
body{
  margin: 0;
  font-family: var(--font);
  background: var(--bg);
  color: var(--text);
  line-height: 1.5;
}

a{ color: var(--primary); text-decoration: none; }
a:hover{ text-decoration: underline; }

.container{
  max-width: 1040px;
  margin: 0 auto;
  padding: 0 var(--s-4);
}

.main-content.container{
  padding-top: var(--s-6);
  padding-bottom: var(--s-8);
}

/* utilities */
.hidden{ display:none !important; }
.muted{ color: var(--muted); }
.center{ text-align:center; }
.grid{ display:grid; gap: var(--s-4); }
.flex{ display:flex; gap: var(--s-3); align-items:center; }
.card{
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  box-shadow: var(--shadow-sm);
  padding: var(--s-5);
}


.navbar{
  position: sticky; top: 0; z-index: 10;
  display: flex; align-items: center; justify-content: space-between;
  height: 64px;
  padding: 0 var(--s-4);
  background: var(--card);
  border-bottom: 1px solid var(--border);
  box-shadow: var(--shadow-sm);
}

/* the <div> that wraps your links */
.navbar > div{
  display: flex; align-items: center; gap: var(--s-3);
}

/* links */
.navbar a{
  color: var(--text);
  text-decoration: none;
  padding: .4rem .7rem;
  border-radius: var(--radius-sm);
}
.navbar a:hover{
  background: var(--bg-soft);
}

/* dark mode toggle button */
.dark-mode-toggle{
  border: 1px solid var(--border);
  background: var(--bg-soft);
  color: var(--text);
  padding: .5rem .85rem;
  border-radius: var(--radius-sm);
  cursor: pointer;
  transition: background .2s ease, border-color .2s ease, transform .04s ease;
}
.dark-mode-toggle:hover{ background: color-mix(in srgb, var(--bg-soft) 80%, var(--text) 5%); }
.dark-mode-toggle:active{ transform: translateY(1px); }

/* responsive: keep spacing tidy on small screens */
@media (max-width: 480px){
  .navbar{ padding: 0 var(--s-2); }
  .navbar > div{ gap: var(--s-2); }
}



form{ display:grid; gap: var(--s-3); }
input, select, textarea{
  width: 100%;
  font: inherit;
  color: var(--text);
  background: var(--bg);
  border: 1px solid var(--border);
  border-radius: var(--radius-sm);
  padding: .6rem .75rem;
  outline: none;
  transition: border-color .15s ease, box-shadow .15s ease;
}
textarea{ min-height: 88px; resize: vertical; }
input:focus, select:focus, textarea:focus{
  border-color: var(--primary);
  box-shadow: 0 0 0 3px color-mix(in srgb, var(--primary) 20%, transparent);
}
small.error{ color: var(--danger); font-size: var(--fs-sm); }

.auth-page{
  max-width: 420px; margin: 10vh auto;
}
.auth-card{ padding: var(--s-6); }


.btn{
  display:inline-flex; align-items:center; justify-content:center;
  gap: .5rem;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border);
  background: var(--bg-soft);
  color: var(--text);
  padding: .55rem .9rem;
  cursor: pointer;
  transition: transform .04s ease, background .2s ease, border-color .2s ease;
  user-select: none;
}
.btn:hover{ background: color-mix(in srgb, var(--bg-soft) 80%, var(--text) 5%); }
.btn:active{ transform: translateY(1px); }

.btn.primary{
  background: var(--primary);
  border-color: var(--primary);
  color: var(--primary-contrast);
}
.btn.secondary{
  background: var(--bg-soft);
  border-color: var(--border);
}
.btn.danger{
  background: color-mix(in srgb, var(--danger) 18%, var(--bg) 82%);
  border-color: var(--danger);
  color: var(--text);
}
.btn.block{ width: 100%; }

/* Segmented control (filters) */
.segmented{
  display:inline-flex; border:1px solid var(--border); border-radius: var(--radius-sm); overflow: hidden;
}
.segmented .seg{
  padding: .45rem .8rem; border:0; background: transparent; cursor: pointer;
}
.segmented .seg.active{ background: var(--bg-soft); font-weight: 600; }

/* Status filter (your current buttons that use .btn + .active) */
.status-filter{ display:flex; gap: var(--s-3); flex-wrap: wrap; margin: var(--s-4) 0; }
.status-filter .btn.active{
  border-color: var(--primary);
  background: color-mix(in srgb, var(--primary) 12%, var(--bg) 88%);
}


.todos-container{ display:grid; gap: var(--s-5); }

.todo-form{
  display:grid;
  grid-template-columns: 1fr;
  gap: var(--s-3);
  padding: var(--s-5);
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  box-shadow: var(--shadow-sm);
}

/* Controls row (Search + Category + Status) */
.controls{
  display:flex; gap: var(--s-3); flex-wrap: wrap; align-items:center;
}

/* List */
.todo-list, .task-list{ list-style:none; margin:0; padding:0; display:grid; gap: var(--s-3); }
.todo-item, .task-item{
  display:grid; grid-template-columns: auto 1fr auto; align-items: start; gap: var(--s-3);
  padding: var(--s-4);
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  box-shadow: var(--shadow-sm);
}
.todo-item input[type="checkbox"], .task-item input[type="checkbox"]{
  transform: translateY(4px);
}
.todo-main{ display:grid; gap: var(--s-2); }
.todo-title{ font-weight: 600; }
.todo-desc{ color: var(--muted); font-size: var(--fs-sm); }
.todo-meta{ display:flex; gap: var(--s-2); flex-wrap: wrap; }
.badge{
  font-size: .75rem; padding: .15rem .5rem;
  border: 1px solid var(--border);
  border-radius: 999px;
  background: var(--bg-soft);
}
.badge.due{ border-color: var(--warning); }

/* Empty state / loading */
.empty{ color: var(--muted); text-align:center; padding: var(--s-6) 0; }


.home-hero{ padding: var(--s-6); border:1px solid var(--border); border-radius: var(--radius); background: var(--card); box-shadow: var(--shadow-sm); }
.home-actions{ display:flex; gap: var(--s-3); flex-wrap: wrap; }


@media (min-width: 720px){
  .todo-form{
    grid-template-columns: 2fr 1fr 1fr 1fr auto;
    align-items: end;
  }
  .todo-form textarea{ grid-column: 1 / -1; }
  .controls{ justify-content: space-between; }
}

/* Slightly denser on very small screens */
@media (max-width: 360px){
  .navbar-inner{ padding: 0 var(--s-2); }
  .container{ padding: 0 var(--s-2); }
}



/* ===== Login / Register ===== */
.auth-page{
  max-width: 420px;
  margin: 10vh auto;
  padding: 0 var(--s-4);
}

.card.auth-card{
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  box-shadow: var(--shadow-sm);
  padding: var(--s-6);
}

.auth-card h1{
  margin: 0 0 var(--s-4);
  font-size: var(--fs-xl);
}

.auth-card form{
  display: grid;
  gap: var(--s-3);
}

/* inputs already inherit global input styles; this just tightens spacing */
.auth-card input{
  padding: .65rem .8rem;
}

/* submit button */
.auth-card button[type="submit"]{
  border: 1px solid var(--primary);
  background: var(--primary);
  color: var(--primary-contrast);
  padding: .6rem 1rem;
  border-radius: var(--radius-sm);
  cursor: pointer;
  transition: transform .04s ease, opacity .2s ease;
}
.auth-card button[type="submit"]:hover{ opacity: .95; }
.auth-card button[type="submit"]:active{ transform: translateY(1px); }

/* helper text + link */
.auth-card p{
  margin-top: var(--s-3);
  font-size: var(--fs-sm);
  color: var(--muted);
}
.auth-card p a{ color: var(--primary); text-decoration: none; }
.auth-card p a:hover{ text-decoration: underline; }

/* dark mode tweaks are automatic via CSS variables */




.home-hero{
  padding: var(--s-6);
  border:1px solid var(--border);
  border-radius: var(--radius);
  background: var(--card);
  box-shadow: var(--shadow-sm);
  text-align: center;
}
.home-actions{ display:flex; gap: var(--s-3); justify-content:center; margin-top: var(--s-4); flex-wrap: wrap; }



/* ===== TODOS PAGE ===== */
.todos-container{
  display: grid;
  gap: var(--s-5);
}

/* Add form (works if your AddTodoForm has className="todo-form"; 
   if not, it will still look fine due to global input/select styles) */
.todo-form{
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--s-3);
  padding: var(--s-5);
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  box-shadow: var(--shadow-sm);
}

/* Search + Category + Status buttons row */
.status-filter{
  display: flex;
  gap: var(--s-3);
  flex-wrap: wrap;
  align-items: center;
}

/* Buttons (active state) */
.status-filter .btn.active{
  border-color: var(--primary);
  background: color-mix(in srgb, var(--primary) 12%, var(--bg) 88%);
}

/* Task list + items */
.task-list{
  list-style: none;
  padding: 0;
  margin: 0;
  display: grid;
  gap: var(--s-3);
}
.task-item{
  display: grid;
  grid-template-columns: auto 1fr auto;
  gap: var(--s-3);
  align-items: start;
  padding: var(--s-4);
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  box-shadow: var(--shadow-sm);
}

/* Common sub-parts (use these classNames in TaskList for nice formatting) */
.task-main{ display: grid; gap: var(--s-2); }
.task-title{ font-weight: 600; }
.task-desc{ color: var(--muted); font-size: var(--fs-sm); }
.task-meta{ display: flex; gap: var(--s-2); flex-wrap: wrap; }
.badge{
  font-size: .75rem;
  padding: .15rem .5rem;
  border: 1px solid var(--border);
  border-radius: 999px;
  background: var(--bg-soft);
}
.badge.due{ border-color: var(--warning); }

/* Strike-through when completed — add className "completed" on the li */
.task-item.completed .task-title{
  text-decoration: line-through;
  opacity: .7;
}

/* Responsive layout: put form fields in a row on wider screens */
@media (min-width: 720px){
  .todo-form{
    grid-template-columns: 2fr 1fr 1fr 1fr auto;
    align-items: end;
  }
  .todo-form textarea{ grid-column: 1 / -1; }
}




/* ===== TODOS: Table layout (Title | Category | Due | Actions) ===== */

/* Align "Title" header with the title text (not with the checkbox) */
.tasks-table{
  --pad-x: 1rem;        /* td/th horizontal padding */
  --cb-size: 16px;      /* checkbox size */
  --gap: .75rem;        /* space between checkbox and text */
}

/* Make sure checkbox matches the size we use in the calc */
.title-cell input[type="checkbox"]{
  width: var(--cb-size);
  height: var(--cb-size);
  transform: translateY(3px);
}

/* Shift the Title header text to align with the title text below */
.tasks-table thead th:first-child{
  padding-left: calc(var(--pad-x) + var(--cb-size) + var(--gap));
}

/* Keep td padding as before (so rows stay lined up with other headers) */
.tasks-table tbody td{
  padding: .75rem var(--pad-x);
}

/* (Existing table styles—keep if not already present) */
.tasks-table-wrap { width: 100%; overflow-x: auto; }
.tasks-table{
  width: 100%;
  border-collapse: collapse;
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  box-shadow: var(--shadow-sm);
  overflow: hidden;
}
.tasks-table thead th{
  text-align: left;
  padding: .75rem var(--pad-x);
  background: var(--bg-soft);
  color: var(--muted);
  border-bottom: 1px solid var(--border);
  font-weight: 600;
}
.tasks-table tbody tr:last-child td{ border-bottom: none; }
.tasks-table td.col-title { width: 100%; }
.tasks-table td.col-category,
.tasks-table td.col-due { white-space: nowrap; text-align: center; }
.tasks-table td.col-actions { white-space: nowrap; text-align: right; }

.title-cell{ display: flex; gap: var(--gap); align-items: flex-start; }
.task-main{ display: grid; gap: .25rem; }
.task-title{ font-weight: 600; }
.task-desc{ color: var(--muted); font-size: var(--fs-sm); }
.badge{ font-size: .75rem; padding: .15rem .5rem; border: 1px solid var(--border); border-radius: 999px; background: var(--bg-soft); }
.badge.due{ border-color: var(--warning); }
.tasks-table tbody tr.completed .task-title{ text-decoration: line-through; opacity: .75; }
.task-actions{ display: inline-flex; gap: .5rem; }

@media (max-width: 640px){
  .tasks-table thead th:nth-child(2),
  .tasks-table tbody td.col-category{ display: none; }
}




/* ===== AddTodoForm (src/Components/AddTodoForm.js) ===== */
.todo-form{
  display: grid;
  gap: var(--s-3, .75rem);
  padding: var(--s-5, 1.25rem);
  background: var(--card, #fff);
  border: 1px solid var(--border, #e5e7eb);
  border-radius: var(--radius, 12px);
  box-shadow: var(--shadow-sm, 0 4px 12px rgba(0,0,0,.06));
}

/* Inputs inside the form */
.todo-form input,
.todo-form select,
.todo-form textarea{
  width: 100%;
  font: inherit;
  color: var(--text, #111827);
  background: var(--bg, #fff);
  border: 1px solid var(--border, #e5e7eb);
  border-radius: var(--radius-sm, 8px);
  padding: .6rem .75rem;
  outline: none;
  transition: border-color .15s ease, box-shadow .15s ease;
}
.todo-form textarea{ min-height: 88px; resize: vertical; }
.todo-form input:focus,
.todo-form select:focus,
.todo-form textarea:focus{
  border-color: var(--primary, #2563eb);
  box-shadow: 0 0 0 3px color-mix(in srgb, var(--primary, #2563eb) 20%, transparent);
}

/* Error text under the title */
.todo-form small.error{
  color: var(--danger, #ef4444);
  font-size: var(--fs-sm, .9rem);
  margin-top: -0.25rem;
}

/* Submit button */
.todo-form button[type="submit"]{
  border: 1px solid var(--primary, #2563eb);
  background: var(--primary, #2563eb);
  color: var(--primary-contrast, #fff);
  padding: .6rem 1rem;
  border-radius: var(--radius-sm, 8px);
  cursor: pointer;
  transition: transform .04s ease, opacity .2s ease;
}
.todo-form button[type="submit"]:hover{ opacity: .95; }
.todo-form button[type="submit"]:active{ transform: translateY(1px); }

/* ------ Responsive layout (desktop & up) ------ */
@media (min-width: 720px){
  /* Grid: [Title] [Category] [Due] [Add] */
  .todo-form{
    grid-template-columns: 2fr 1fr 1fr auto;
    align-items: end;
  }

  /* 1) Title input = first input in the form */
  .todo-form > input:first-of-type{
    grid-column: 1 / span 2; /* spans Title area */
  }

  /* Error text spans whole row under the title */
  .todo-form > small.error{
    grid-column: 1 / -1;
  }

  /* 2) Description should take its own full row */
  .todo-form > textarea{
    grid-column: 1 / -1;    /* full width */
  }

  /* 3) Category (select) goes into column 3 */
  .todo-form > select{
    grid-column: 3 / span 1;
  }

  /* 4) Due date (input[type=date]) goes into column 4 */
  .todo-form > input[type="date"]{
    grid-column: 4 / span 1;
  }

  /* 5) Add button sits at the end (col 4) */
  .todo-form > button[type="submit"]{
    grid-column: 4 / span 1;
  }
}





/* ===== CategoryFilter (bare <select>) ===== */
/* Styles the CategoryFilter select when used on the Todos page */
.todos-container > select{
  /* sizing & spacing */
  max-width: 220px;
  margin: 0 0 var(--s-3, .75rem) 0;

  /* base look (works with your global tokens) */
  font: inherit;
  color: var(--text, #111827);
  background: var(--bg, #fff);
  border: 1px solid var(--border, #e5e7eb);
  border-radius: var(--radius-sm, 8px);
  padding: .6rem .75rem;

  /* custom dropdown caret */
  appearance: none;               /* remove native arrow */
  background-image:
    linear-gradient(to bottom, transparent 0%, transparent 100%),
    url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='14' height='14' viewBox='0 0 24 24' fill='none' stroke='%236b7280' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><polyline points='6 9 12 15 18 9'/></svg>");
  background-repeat: no-repeat, no-repeat;
  background-position: right .65rem center, right .65rem center;
  background-size: 1px 100%, 14px 14px;
  padding-right: 2rem;            /* room for the caret */
  transition: border-color .15s ease, box-shadow .15s ease;
}

.todos-container > select:focus{
  border-color: var(--primary, #2563eb);
  box-shadow: 0 0 0 3px color-mix(in srgb, var(--primary, #2563eb) 20%, transparent);
  outline: none;
}

/* Dark mode tweak for caret color */
body.dark .todos-container > select,
:root[data-theme="dark"] .todos-container > select{
  background-image:
    linear-gradient(to bottom, transparent 0%, transparent 100%),
    url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='14' height='14' viewBox='0 0 24 24' fill='none' stroke='%239ca3af' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><polyline points='6 9 12 15 18 9'/></svg>");
}



/* ===== Footer (src/Components/Footer.js) ===== */
.footer{
  margin-top: var(--s-6, 1.5rem);
  padding: var(--s-5, 1.25rem) 0;
  text-align: center;
  background: var(--card, hsl(77, 23%, 59%));
  border-top: 1px solid var(--border, hsl(220, 18%, 55%));
  color: var(--muted, #6b7280);
  box-shadow: var(--shadow-sm, 0 4px 12px rgba(0,0,0,.06)) inset 0 1px 0 rgba(255,255,255,.02);
}

.footer p{
  margin: 0;
  line-height: 1.6;
}

.footer strong{
  color: var(--text, #111827);
  font-weight: 700;
}

.footer a{
  color: var(--primary, #2563eb);
  text-decoration: none;
  padding: 0 .25rem;
  border-radius: var(--radius-sm, 8px);
  transition: background .2s ease, color .2s ease;
}

.footer a:hover{
  text-decoration: underline;
  background: var(--bg-soft, #f7f7f8);
}

/* Optional: make footer stick to bottom if page is short
   (requires your outer layout to be display:flex column) */
.app-shell{
  min-height: 100dvh;
  display: flex;
  flex-direction: column;
}
.app-shell .main-content{ flex: 1; }












/* ===== Tasks page ===== */
.tasks-hero{
  text-align: center;
  padding: var(--s-6, 1.5rem);
  border: 1px solid var(--border, #e5e7eb);
  border-radius: var(--radius, 12px);
  background: var(--card, #fff);
  box-shadow: var(--shadow-sm, 0 4px 12px rgba(0,0,0,.06));
}
.tasks-hero h2{ margin: 0 0 .5rem; }
.tasks-hero p{ margin: 0; }



/* ===== Navbar with centered brand (IAAXIN) ===== */
.navbar{
  position: sticky; top: 0; z-index: 10;
  display: grid;
  grid-template-columns: 1fr auto 1fr;   /* left | center | right */
  align-items: center;
  height: 64px;
  padding: 0 var(--s-4);
  background: var(--card);
  border-bottom: 1px solid var(--border);
  box-shadow: var(--shadow-sm);
}

/* Left links */
.nav-links{
  display: flex;
  align-items: center;
  gap: var(--s-3);
}
.nav-link{
  color: var(--text);
  text-decoration: none;
  padding: .4rem .7rem;
  border-radius: var(--radius-sm);
}
.nav-link:hover{
  background: var(--bg-soft);
  text-decoration: none;
}

/* Center brand */
.nav-brand{
  display: flex;
  justify-content: center;
}
.brand{
  display: inline-block;
  font-weight: 800;
  letter-spacing: .12em;
  font-size: 1.1rem;
  text-transform: uppercase;
  color: var(--text);
  text-decoration: none;
  padding: .35rem .9rem;
  border-radius: 999px;
  /* subtle pill style that looks good in light & dark */
  background: color-mix(in srgb, var(--bg-soft) 70%, transparent);
  border: 1px solid var(--border);
  box-shadow: 0 1px 0 rgba(0,0,0,.03) inset;
}

/* Right side (toggle) */
.nav-right{
  display: flex;
  justify-content: flex-end;
  align-items: center;
}
.dark-mode-toggle{
  border: 1px solid var(--border);
  background: var(--bg-soft);
  color: var(--text);
  padding: .5rem .85rem;
  border-radius: var(--radius-sm);
  cursor: pointer;
  transition: background .2s ease, border-color .2s ease, transform .04s ease;
}
.dark-mode-toggle:hover{ background: color-mix(in srgb, var(--bg-soft) 80%, var(--text) 5%); }
.dark-mode-toggle:active{ transform: translateY(1px); }

/* Responsive: keep brand readable on small screens */
@media (max-width: 480px){
  .navbar{ padding: 0 var(--s-2); }
  .nav-links{ gap: var(--s-2); }
  .brand{ letter-spacing: .1em; font-size: 1rem; padding: .3rem .7rem; }
}











/* ---- Sticky footer layout (no code changes needed) ---- */
html, body, #root { height: 100%; }

#root{
  min-height: 100dvh;        /* fill viewport */
  display: flex;
  flex-direction: column;    /* stack: Navbar, Main, Footer */
}

/* Make main area grow to push footer down */
.main-content{
  flex: 1 0 auto;
}

/* Footer stays at the bottom */
.footer{
  flex-shrink: 0;
  margin-top: 0;             /* remove extra gap so it hugs the bottom */
}

















/* ===== Auth pages: make the card & inputs bigger (Login & Register) ===== */
.auth-page{
  max-width: 640px;                 /* was small; make wider */
  margin: 8vh auto;
  padding: 0 var(--s-4, 1rem);
}

.card.auth-card{
  padding: 2rem;                    /* more breathing room */
  border-radius: 16px;              /* softer corners */
  box-shadow: var(--shadow, 0 8px 24px rgba(0,0,0,.08));
}

/* Title */
.auth-card h1{
  font-size: 1.75rem;               /* larger heading */
  line-height: 1.2;
  margin: 0 0 1rem;
  text-align: center;
}

/* Form spacing */
.auth-card form{
  display: grid;
  gap: 1rem;                        /* bigger gaps between fields */
}

/* Inputs */
.auth-card input{
  font-size: 1.05rem;               /* bigger text */
  padding: .85rem 1rem;             /* taller inputs */
  border-radius: 10px;
}

/* Inline error messages (from react-hook-form) */
.auth-card small.error{
  display: block;
  margin-top: .25rem;
  color: var(--danger, #ef4444);
  font-size: .95rem;
}

/* Submit button */
.auth-card button[type="submit"]{
  font-size: 1.05rem;
  padding: .9rem 1rem;              /* taller button */
  border-radius: 10px;
  border: 1px solid var(--primary, #2563eb);
  background: var(--primary, #2563eb);
  color: var(--primary-contrast, #fff);
  cursor: pointer;
  transition: opacity .2s ease, transform .04s ease;
}
.auth-card button[type="submit"]:hover{ opacity: .95; }
.auth-card button[type="submit"]:active{ transform: translateY(1px); }

/* Helper text */
.auth-card p{
  margin-top: 1rem;
  font-size: 1rem;
  text-align: center;
}

/* Slightly scale down on very small screens to avoid overflow */
@media (max-width: 380px){
  .auth-page{ max-width: 95%; }
  .card.auth-card{ padding: 1.25rem; }
  .auth-card input, .auth-card button[type="submit"]{ padding: .75rem .9rem; }
}
